apiVersion: apps/v1
kind: Deployment
metadata:
  name: celery
spec:
  replicas: {{ .Values.celery.replicaCount | default 1 }}
  selector:
    matchLabels:
      app: celery
  template:
    metadata:
      labels:
        app: celery
    spec:
      {{- $ps := .Values.image.pullSecrets }}
      {{- if $ps }}
      imagePullSecrets:
        {{- if kindIs "string" $ps }}
        - name: {{ $ps | quote }}
        {{- else if kindIs "slice" $ps }}
          {{- range $i, $v := $ps }}
            {{- if kindIs "string" $v }}
        - name: {{ $v | quote }}
            {{- else }}
        - name: {{ (get $v "name") | default $v | quote }}
            {{- end }}
          {{- end }}
        {{- else }}
        - name: {{ (get $ps "name") | quote }}
        {{- end }}
      {{- end }}
      containers:
      - name: celery
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        command: ["celery", "-A", "scripts.celery_tasks.celery_app", "worker", "--loglevel=info", "--concurrency={{ .Values.celery.concurrency | default 4 }}"]
        env:
        - name: PYTHONPATH
          value: "/app/scripts"
        - name: STORAGE_HOME
          value: {{ .Values.env.STORAGE_HOME | default "/data" | quote }}
        - name: STORAGE_DIRECTORY
          value: {{ .Values.env.STORAGE_DIRECTORY | default "/data/honeyspeak" | quote }}
        - name: DATABASE_PATH
          value: {{ .Values.env.DATABASE_PATH | default "/data/honeyspeak/Dictionary.sqlite" | quote }}
        - name: ASSET_DIRECTORY
          value: {{ .Values.env.ASSET_DIRECTORY | default "/data/honeyspeak/assets_hires" | quote }}
        - name: PACKAGE_DIRECTORY
          value: {{ .Values.env.PACKAGE_DIRECTORY | default "/data/honeyspeak/assets" | quote }}
        - name: CELERY_BROKER_URL
          value: {{ .Values.env.CELERY_BROKER_URL | default "redis://redis:6379/0" | quote }}
        - name: CELERY_RESULT_BACKEND
          value: {{ .Values.env.CELERY_RESULT_BACKEND | default "redis://redis:6379/0" | quote }}
        - name: DICTIONARY_API_KEY
          value: {{ .Values.env.DICTIONARY_API_KEY | default "" | quote }}
        - name: OPENAI_API_KEY
          value: {{ .Values.env.OPENAI_API_KEY | default "" | quote }}
        volumeMounts:
        - name: data
          mountPath: {{ .Values.storage.mountPath | default "/data" }}
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: honeyspeak-builder-pvc
